package usaf.airshowapp;

import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.TabHost;
import android.widget.TextView;

import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;

import java.util.ArrayList;

public class NewParking extends AppCompatActivity implements OnMapReadyCallback {

    //Variables and views
    /*ArrayList<String> arrParkingLot = new ArrayList<>();

    ArrayList<String[]> arrParking = new ArrayList<>();*/

    AirshowInformationStorage Storage = new AirshowInformationStorage();

    TextView txtNoParking;

    GoogleMap mMap;

    ListView lvParking;

    double dblLat = 0;
    double dblLng = 0;

    String strSpotName;

    boolean bolLatLngChange = false;

    ArrayList<ParkingSpot> spots = new ArrayList<>();

    ArrayList<String> spotNames = new ArrayList<>();
    TabHost.OnTabChangeListener tabChange = new TabHost.OnTabChangeListener() {
        @Override
        public void onTabChanged(String tabId) {
            for (ParkingSpot spot : spots) {
                spotNames.add(tabId);
                if (spot != null) {
                    spotNames.add(spot.getName());
                }
            }
        }
    };
    //Declaring on click for list view
    AdapterView.OnItemClickListener ParkingChosen = new AdapterView.OnItemClickListener() {
        @Override
        public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
            //Get the selected parking lot's coordinates
           /* for (String[] Spot : arrParking)
            {
                if (parent.getItemAtPosition(position).toString() == Spot[1])
                {
                    onMapReady(mMap);
                    dblLat = Double.valueOf(Spot[2]);
                    dblLng = Double.valueOf(Spot[3]);
                    strSpotName = parent.getItemAtPosition(position).toString();
                    bolLatLngChange = true;
                }
            }*/
        }
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_new_parking);

        //Gets parking lots
        /*arrParking = Storage.getParking();
        for (int i = 0; i< arrParking.size(); i++)
        {

        }*/

        //Sets adapter for list view
        //ArrayAdapter<String> Adapter = new ArrayAdapter<>(this, R.layout.spinner, arrParkingLot);

        ArrayAdapter<String> Adapter = new ArrayAdapter<>(this, R.layout.spinner, spotNames);
        //If available lots displays them if not hides them
        /*if (arrParkingLot.size() != 0)
        {
            lvParking = findViewById(R.id.ParkingList);
            lvParking.setAdapter(Adapter);
            lvParking.setOnItemClickListener(ParkingChosen);
        }
        else
        {
            lvParking.setVisibility(View.INVISIBLE);
            txtNoParking = findViewById(R.id.txtNoParking);
            txtNoParking.setVisibility(View.VISIBLE);
        }*/


        if (spotNames.size() != 0) {
            lvParking = findViewById(R.id.ParkingList);
            lvParking.setAdapter(Adapter);
            lvParking.setOnItemClickListener(ParkingChosen);
        } else {
            lvParking = findViewById(R.id.ParkingList);
            lvParking.setVisibility(View.INVISIBLE);
            txtNoParking = findViewById(R.id.txtNoParking);
            txtNoParking.setVisibility(View.VISIBLE);
        }

        //Generated by map fragment
        SupportMapFragment mapFrag = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.ParkingMap);
        mapFrag.getMapAsync(this);
    }

    @Override
    public void onMapReady(GoogleMap googleMap) {

        if (bolLatLngChange) {
            //Displays and focuses on pin in map
            mMap = googleMap;
            LatLng Pin = new LatLng(dblLat, dblLng);
            mMap.addMarker(new MarkerOptions().position(Pin).title(strSpotName));
            mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(Pin, 13));
        }
    }
}
